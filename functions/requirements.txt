# AWS
boto3
boto3-stubs

# For JWT authentication
# https://pypi.org/project/PyJWT/
# pyjwt
# Require cryptography package to use RSA algorithm
# https://pyjwt.readthedocs.io/en/stable/installation.html#cryptographic-dependencies-optional
# pyjwt[crypto]

# PyJWT is better than python-jose in terms of maintenance, support, and numbers of downloads, users, and contributors.
# But AWS uses python-jose to verify JWT officially.
# https://github.com/awslabs/aws-support-tools/tree/master/Cognito/decode-verify-jwt#python-3
# https://github.com/awslabs/aws-support-tools/blob/master/Cognito/decode-verify-jwt/decode-verify-jwt.py
# https://pypi.org/project/python-jose/
python-jose[cryptography]


# By <package> == <version>, specify the version of the package to install.
# https://note.nkmk.me/python-pip-install-requirements/

# Json parser and validator for models and request bodies
# https://docs.pydantic.dev/latest/install/
# pydantic # pydantic is automatically installed by FastAPI
# For pydantic email validation
# https://github.com/JoshData/python-email-validator
email-validator

# Python is suitable for IO-bound process rather than CPU-bound process as a language feature
# Because Python has GIL (Global Interpreter Lock), it can't use multi-threading
# https://qiita.com/ttiger55/items/5e1d5a3405d2b3ef8f40
# I/O bound process is a process that spends most of the time waiting for I/O such as file reading and writing, network communication, and database access
# https://qiita.com/nyax/items/659b07cd755f2ced563f#i--o%E3%83%90%E3%82%A6%E3%83%B3%E3%83%89
# Fast API is ASGI (Asynchronous Server Gateway Interface) framework, on the other hand, Flask and Django are WSGI (Web Server Gateway Interface) framework
# WSGI is Django and Flask's interface connect with web server that supports WSGI such as Gunicorn and uWSGI
# ASGI is a successor of WSGI and FastAPI's interface connect with web server that supports ASGI such as Uvicorn and Hypercorn
# https://okiyasi.hatenablog.com/entry/2020/08/10/211804

# FastAPI can automatically generate API documents using OpenAPI and install pydantic dependencies by default
# https://fastapi.tiangolo.com/ja/features/
# FastAPI is suitable for IO-bound process because it supports asynchronous request handling unlike Flask and Django
# https://fastapi.tiangolo.com/ja/
# fastapi
# Downgrade to 0.99.1 because of the following issue (No module named 'pydantic_core._pydantic_core' using AWS Lambdas)
# https://github.com/pydantic/pydantic/issues/6557#issuecomment-1724559815
fastapi==0.99.1
# Mangum converts a request and response of FastAPI into event and context of AWS Lambda
# https://mangum.io/
mangum

# Slack notification
requests