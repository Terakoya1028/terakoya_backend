{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "BookLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/terakoya-booking-renewal-dev-book"
      }
    },
    "RemindLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/terakoya-booking-renewal-dev-remind"
      }
    },
    "LoginLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/terakoya-booking-renewal-dev-login"
      }
    },
    "FetchDashbookingDashlistLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/terakoya-booking-renewal-dev-fetch-booking-list"
      }
    },
    "EditDashbookingDashplaceLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/terakoya-booking-renewal-dev-edit-booking-place"
      }
    },
    "BookingLambdaLayer": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "Content": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/terakoya-booking-renewal/dev/1684219921032-2023-05-16T06:52:01.032Z/booking.zip"
        },
        "LayerName": "terakoya-booking-renewal-dev-layer",
        "CompatibleRuntimes": [
          "python3.9"
        ],
        "CompatibleArchitectures": [
          "x86_64",
          "arm64"
        ]
      }
    },
    "BookLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/terakoya-booking-renewal/dev/1684228277770-2023-05-16T09:11:17.770Z/terakoya-booking-renewal.zip"
        },
        "Handler": "functions/book.lambda_handler",
        "Runtime": "python3.9",
        "FunctionName": "terakoya-booking-renewal-dev-book",
        "MemorySize": 1024,
        "Timeout": 6,
        "Architectures": [
          "arm64"
        ],
        "Environment": {
          "Variables": {
            "ACCESS_KEY": "AKIA2XNILCSA2EVXECQH",
            "SECRET_ACCESS_KEY": "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",
            "DEFAULT_REGION": "ap-northeast-1",
            "STAGE": "dev",
            "TERAKOYA_GMAIL_ADDRESS": "npoterakoya2021@gmail.com",
            "TERAKOYA_GROUP_MAIL_ADDRESS": "info@npoterakoya.org"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "canExecuteLambdaRole",
            "Arn"
          ]
        },
        "Layers": [
          {
            "Ref": "BookingLambdaLayer"
          }
        ]
      },
      "DependsOn": [
        "BookLogGroup",
        "canExecuteLambdaRole"
      ]
    },
    "RemindLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/terakoya-booking-renewal/dev/1684228277770-2023-05-16T09:11:17.770Z/terakoya-booking-renewal.zip"
        },
        "Handler": "functions/remind.lambda_handler",
        "Runtime": "python3.9",
        "FunctionName": "terakoya-booking-renewal-dev-remind",
        "MemorySize": 1024,
        "Timeout": 6,
        "Architectures": [
          "arm64"
        ],
        "Environment": {
          "Variables": {
            "ACCESS_KEY": "AKIA2XNILCSA2EVXECQH",
            "SECRET_ACCESS_KEY": "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",
            "DEFAULT_REGION": "ap-northeast-1",
            "STAGE": "dev",
            "TERAKOYA_GMAIL_ADDRESS": "npoterakoya2021@gmail.com",
            "TERAKOYA_GROUP_MAIL_ADDRESS": "info@npoterakoya.org"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "canExecuteLambdaRole",
            "Arn"
          ]
        },
        "Layers": [
          {
            "Ref": "BookingLambdaLayer"
          }
        ]
      },
      "DependsOn": [
        "RemindLogGroup",
        "canExecuteLambdaRole"
      ]
    },
    "LoginLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/terakoya-booking-renewal/dev/1684228277770-2023-05-16T09:11:17.770Z/terakoya-booking-renewal.zip"
        },
        "Handler": "functions/login.lambda_handler",
        "Runtime": "python3.9",
        "FunctionName": "terakoya-booking-renewal-dev-login",
        "MemorySize": 1024,
        "Timeout": 6,
        "Architectures": [
          "arm64"
        ],
        "Environment": {
          "Variables": {
            "ACCESS_KEY": "AKIA2XNILCSA2EVXECQH",
            "SECRET_ACCESS_KEY": "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",
            "DEFAULT_REGION": "ap-northeast-1",
            "STAGE": "dev"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "canExecuteLambdaRole",
            "Arn"
          ]
        },
        "Layers": [
          {
            "Ref": "BookingLambdaLayer"
          }
        ]
      },
      "DependsOn": [
        "LoginLogGroup",
        "canExecuteLambdaRole"
      ]
    },
    "FetchDashbookingDashlistLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/terakoya-booking-renewal/dev/1684228277770-2023-05-16T09:11:17.770Z/terakoya-booking-renewal.zip"
        },
        "Handler": "functions/fetch_booking_list.lambda_handler",
        "Runtime": "python3.9",
        "FunctionName": "terakoya-booking-renewal-dev-fetch-booking-list",
        "MemorySize": 1024,
        "Timeout": 6,
        "Architectures": [
          "arm64"
        ],
        "Environment": {
          "Variables": {
            "ACCESS_KEY": "AKIA2XNILCSA2EVXECQH",
            "SECRET_ACCESS_KEY": "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",
            "DEFAULT_REGION": "ap-northeast-1",
            "STAGE": "dev"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "canExecuteLambdaRole",
            "Arn"
          ]
        },
        "Layers": [
          {
            "Ref": "BookingLambdaLayer"
          }
        ]
      },
      "DependsOn": [
        "FetchDashbookingDashlistLogGroup",
        "canExecuteLambdaRole"
      ]
    },
    "EditDashbookingDashplaceLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/terakoya-booking-renewal/dev/1684228277770-2023-05-16T09:11:17.770Z/terakoya-booking-renewal.zip"
        },
        "Handler": "functions/edit_booking_place.lambda_handler",
        "Runtime": "python3.9",
        "FunctionName": "terakoya-booking-renewal-dev-edit-booking-place",
        "MemorySize": 1024,
        "Timeout": 6,
        "Architectures": [
          "arm64"
        ],
        "Environment": {
          "Variables": {
            "ACCESS_KEY": "AKIA2XNILCSA2EVXECQH",
            "SECRET_ACCESS_KEY": "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",
            "DEFAULT_REGION": "ap-northeast-1",
            "STAGE": "dev"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "canExecuteLambdaRole",
            "Arn"
          ]
        },
        "Layers": [
          {
            "Ref": "BookingLambdaLayer"
          }
        ]
      },
      "DependsOn": [
        "EditDashbookingDashplaceLogGroup",
        "canExecuteLambdaRole"
      ]
    },
    "BookLambdaVersion4g6s3CDW3dybHBvdW76oq6v1SgEnZjIPZNsKPNyTSgg": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "BookLambdaFunction"
        },
        "CodeSha256": "iZ4CCu8IEVTXZgapnMbGEj3196MP0lQhz5P6DswWZRM="
      }
    },
    "RemindLambdaVersionELKh8QXmkkPylvT1wxv3G338qzKNPLAXqvkSx0mNys": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "RemindLambdaFunction"
        },
        "CodeSha256": "iZ4CCu8IEVTXZgapnMbGEj3196MP0lQhz5P6DswWZRM="
      }
    },
    "LoginLambdaVersiony0OE7B3aBmkejtUFCyPYb7iWCjevDX7kOYNqB633l4": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "LoginLambdaFunction"
        },
        "CodeSha256": "iZ4CCu8IEVTXZgapnMbGEj3196MP0lQhz5P6DswWZRM="
      }
    },
    "FetchDashbookingDashlistLambdaVersionl8w3E5K56IAHJGPRB2oWhdG8S7QKtedG35CISMNJYc": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "FetchDashbookingDashlistLambdaFunction"
        },
        "CodeSha256": "iZ4CCu8IEVTXZgapnMbGEj3196MP0lQhz5P6DswWZRM="
      }
    },
    "EditDashbookingDashplaceLambdaVersionWXRuUscjMXndO6epa76KA4h32VkV4mrS5Bv7ZgYIw": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "EditDashbookingDashplaceLambdaFunction"
        },
        "CodeSha256": "iZ4CCu8IEVTXZgapnMbGEj3196MP0lQhz5P6DswWZRM="
      }
    },
    "Terakoyabookingrenewaldevremindrule1EventBridgeRule": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Name": "terakoya-booking-renewal-scheduled-remind",
        "ScheduleExpression": "cron(0 0,7 ? * TUE,SAT *)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "RemindLambdaFunction",
                "Arn"
              ]
            },
            "Id": "terakoya-booking-renewal-scheduled-remind-target"
          }
        ]
      }
    },
    "RemindEventBridgeLambdaPermission1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "RemindLambdaFunction",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            ":",
            [
              "arn",
              {
                "Ref": "AWS::Partition"
              },
              "events",
              {
                "Ref": "AWS::Region"
              },
              {
                "Ref": "AWS::AccountId"
              },
              {
                "Fn::Join": [
                  "/",
                  [
                    "rule",
                    "terakoya-booking-renewal-scheduled-remind"
                  ]
                ]
              }
            ]
          ]
        }
      }
    },
    "HttpApi": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": "terakoya-booking-renewal-dev-agw",
        "ProtocolType": "HTTP",
        "CorsConfiguration": {
          "AllowHeaders": [
            "Content-Type",
            "X-Amz-Date",
            "Authorization",
            "X-Api-Key",
            "X-Amz-Security-Token",
            "X-Amz-User-Agent",
            "X-Amzn-Trace-Id"
          ],
          "AllowMethods": [
            "OPTIONS",
            "POST",
            "GET"
          ],
          "AllowOrigins": [
            "*"
          ]
        }
      }
    },
    "HttpApiStage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "StageName": "$default",
        "AutoDeploy": true,
        "DefaultRouteSettings": {
          "DetailedMetricsEnabled": false
        }
      }
    },
    "BookLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "BookLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationBook": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "BookLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRoutePostBook": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "POST /book",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationBook"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationBook"
    },
    "LoginLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "LoginLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationLogin": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "LoginLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRoutePostLogin": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "POST /login",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationLogin"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationLogin"
    },
    "FetchDashbookingDashlistLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "FetchDashbookingDashlistLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationFetchDashbookingDashlist": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "FetchDashbookingDashlistLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRouteGetBookingList": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "GET /booking/list",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationFetchDashbookingDashlist"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationFetchDashbookingDashlist"
    },
    "EditDashbookingDashplaceLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "EditDashbookingDashplaceLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationEditDashbookingDashplace": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "EditDashbookingDashplaceLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 30000
      }
    },
    "HttpApiRoutePostBookingEditPlace": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "POST /booking/edit/place",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationEditDashbookingDashplace"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationEditDashbookingDashplace"
    },
    "canExecuteLambdaRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": "AWSLambdaEnableCloudWatchS3",
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/AWSLambdaExecute"
        ]
      }
    },
    "bookingTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "terakoya-booking-renewal-dev",
        "AttributeDefinitions": [
          {
            "AttributeName": "date",
            "AttributeType": "S"
          },
          {
            "AttributeName": "sk",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "date",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "sk",
            "KeyType": "RANGE"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST"
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-terakoya-booking-renewal-dev-ServerlessDeploymentBucketName"
      }
    },
    "BookingLambdaLayerQualifiedArn": {
      "Description": "Current Lambda layer version",
      "Value": {
        "Ref": "BookingLambdaLayer"
      },
      "Export": {
        "Name": "sls-terakoya-booking-renewal-dev-BookingLambdaLayerQualifiedArn"
      }
    },
    "BookingLambdaLayerHash": {
      "Description": "Current Lambda layer hash",
      "Value": "b8f8752e70126d6dd5415bd8f179e879a2824b30",
      "Export": {
        "Name": "sls-terakoya-booking-renewal-dev-BookingLambdaLayerHash"
      }
    },
    "BookingLambdaLayerS3Key": {
      "Description": "Current Lambda layer S3Key",
      "Value": "serverless/terakoya-booking-renewal/dev/1684219921032-2023-05-16T06:52:01.032Z/booking.zip",
      "Export": {
        "Name": "sls-terakoya-booking-renewal-dev-BookingLambdaLayerS3Key"
      }
    },
    "BookLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "BookLambdaVersion4g6s3CDW3dybHBvdW76oq6v1SgEnZjIPZNsKPNyTSgg"
      },
      "Export": {
        "Name": "sls-terakoya-booking-renewal-dev-BookLambdaFunctionQualifiedArn"
      }
    },
    "RemindLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "RemindLambdaVersionELKh8QXmkkPylvT1wxv3G338qzKNPLAXqvkSx0mNys"
      },
      "Export": {
        "Name": "sls-terakoya-booking-renewal-dev-RemindLambdaFunctionQualifiedArn"
      }
    },
    "LoginLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "LoginLambdaVersiony0OE7B3aBmkejtUFCyPYb7iWCjevDX7kOYNqB633l4"
      },
      "Export": {
        "Name": "sls-terakoya-booking-renewal-dev-LoginLambdaFunctionQualifiedArn"
      }
    },
    "FetchDashbookingDashlistLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "FetchDashbookingDashlistLambdaVersionl8w3E5K56IAHJGPRB2oWhdG8S7QKtedG35CISMNJYc"
      },
      "Export": {
        "Name": "sls-terakoya-booking-renewal-dev-FetchDashbookingDashlistLambdaFunctionQualifiedArn"
      }
    },
    "EditDashbookingDashplaceLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "EditDashbookingDashplaceLambdaVersionWXRuUscjMXndO6epa76KA4h32VkV4mrS5Bv7ZgYIw"
      },
      "Export": {
        "Name": "sls-terakoya-booking-renewal-dev-EditDashbookingDashplaceLambdaFunctionQualifiedArn"
      }
    },
    "HttpApiId": {
      "Description": "Id of the HTTP API",
      "Value": {
        "Ref": "HttpApi"
      },
      "Export": {
        "Name": "sls-terakoya-booking-renewal-dev-HttpApiId"
      }
    },
    "HttpApiUrl": {
      "Description": "URL of the HTTP API",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "HttpApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            }
          ]
        ]
      },
      "Export": {
        "Name": "sls-terakoya-booking-renewal-dev-HttpApiUrl"
      }
    }
  }
}